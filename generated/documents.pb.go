// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.9.1
// source: documents.proto

package pda

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Bet_OPERATION int32

const (
	Bet_BET Bet_OPERATION = 0
)

// Enum value maps for Bet_OPERATION.
var (
	Bet_OPERATION_name = map[int32]string{
		0: "BET",
	}
	Bet_OPERATION_value = map[string]int32{
		"BET": 0,
	}
)

func (x Bet_OPERATION) Enum() *Bet_OPERATION {
	p := new(Bet_OPERATION)
	*p = x
	return p
}

func (x Bet_OPERATION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bet_OPERATION) Descriptor() protoreflect.EnumDescriptor {
	return file_documents_proto_enumTypes[0].Descriptor()
}

func (Bet_OPERATION) Type() protoreflect.EnumType {
	return &file_documents_proto_enumTypes[0]
}

func (x Bet_OPERATION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bet_OPERATION.Descriptor instead.
func (Bet_OPERATION) EnumDescriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{2, 0}
}

type Financial_OPERATION int32

const (
	Financial_WIN         Financial_OPERATION = 0
	Financial_DEPOSIT     Financial_OPERATION = 1
	Financial_TRANSACTION Financial_OPERATION = 2
)

// Enum value maps for Financial_OPERATION.
var (
	Financial_OPERATION_name = map[int32]string{
		0: "WIN",
		1: "DEPOSIT",
		2: "TRANSACTION",
	}
	Financial_OPERATION_value = map[string]int32{
		"WIN":         0,
		"DEPOSIT":     1,
		"TRANSACTION": 2,
	}
)

func (x Financial_OPERATION) Enum() *Financial_OPERATION {
	p := new(Financial_OPERATION)
	*p = x
	return p
}

func (x Financial_OPERATION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Financial_OPERATION) Descriptor() protoreflect.EnumDescriptor {
	return file_documents_proto_enumTypes[1].Descriptor()
}

func (Financial_OPERATION) Type() protoreflect.EnumType {
	return &file_documents_proto_enumTypes[1]
}

func (x Financial_OPERATION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Financial_OPERATION.Descriptor instead.
func (Financial_OPERATION) EnumDescriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{3, 0}
}

type Documents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *Documents) Reset() {
	*x = Documents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Documents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Documents) ProtoMessage() {}

func (x *Documents) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Documents.ProtoReflect.Descriptor instead.
func (*Documents) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{0}
}

func (x *Documents) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Body:
	//	*Document_Personal
	//	*Document_Financial
	//	*Document_Bet
	//	*Document_Balance
	Body isDocument_Body `protobuf_oneof:"body"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{1}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Document) GetBody() isDocument_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Document) GetPersonal() *Personal {
	if x, ok := x.GetBody().(*Document_Personal); ok {
		return x.Personal
	}
	return nil
}

func (x *Document) GetFinancial() *Financial {
	if x, ok := x.GetBody().(*Document_Financial); ok {
		return x.Financial
	}
	return nil
}

func (x *Document) GetBet() *Bet {
	if x, ok := x.GetBody().(*Document_Bet); ok {
		return x.Bet
	}
	return nil
}

func (x *Document) GetBalance() *Balance {
	if x, ok := x.GetBody().(*Document_Balance); ok {
		return x.Balance
	}
	return nil
}

type isDocument_Body interface {
	isDocument_Body()
}

type Document_Personal struct {
	Personal *Personal `protobuf:"bytes,2,opt,name=personal,proto3,oneof"`
}

type Document_Financial struct {
	Financial *Financial `protobuf:"bytes,3,opt,name=financial,proto3,oneof"`
}

type Document_Bet struct {
	Bet *Bet `protobuf:"bytes,4,opt,name=bet,proto3,oneof"`
}

type Document_Balance struct {
	Balance *Balance `protobuf:"bytes,5,opt,name=balance,proto3,oneof"`
}

func (*Document_Personal) isDocument_Body() {}

func (*Document_Financial) isDocument_Body() {}

func (*Document_Bet) isDocument_Body() {}

func (*Document_Balance) isDocument_Body() {}

type Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NodeId    int32                `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Amount    float32              `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency  int32                `protobuf:"varint,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Operation Bet_OPERATION        `protobuf:"varint,5,opt,name=operation,proto3,enum=PdaApi.Bet_OPERATION" json:"operation,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Spins     int32                `protobuf:"varint,7,opt,name=spins,proto3" json:"spins,omitempty"`
}

func (x *Bet) Reset() {
	*x = Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{2}
}

func (x *Bet) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Bet) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Bet) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Bet) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *Bet) GetOperation() Bet_OPERATION {
	if x != nil {
		return x.Operation
	}
	return Bet_BET
}

func (x *Bet) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Bet) GetSpins() int32 {
	if x != nil {
		return x.Spins
	}
	return 0
}

type Financial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NodeId    int32                `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Amount    float32              `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency  int32                `protobuf:"varint,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Operation Financial_OPERATION  `protobuf:"varint,5,opt,name=operation,proto3,enum=PdaApi.Financial_OPERATION" json:"operation,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Financial) Reset() {
	*x = Financial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Financial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Financial) ProtoMessage() {}

func (x *Financial) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Financial.ProtoReflect.Descriptor instead.
func (*Financial) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{3}
}

func (x *Financial) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Financial) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Financial) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Financial) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *Financial) GetOperation() Financial_OPERATION {
	if x != nil {
		return x.Operation
	}
	return Financial_WIN
}

func (x *Financial) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency int32   `protobuf:"varint,1,opt,name=currency,proto3" json:"currency,omitempty"`
	UserId   int32   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	NodeId   int32   `protobuf:"varint,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Amount   float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	IsActive bool    `protobuf:"varint,5,opt,name=isActive,proto3" json:"isActive,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{4}
}

func (x *Balance) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *Balance) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Balance) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Balance) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Balance) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type Personal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                  int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NodeId                  int32                `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Gender                  int32                `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"`
	IsVerified              bool                 `protobuf:"varint,4,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	Status                  int32                `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Birthdate               *timestamp.Timestamp `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Country                 int32                `protobuf:"varint,7,opt,name=country,proto3" json:"country,omitempty"`
	City                    string               `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	RegistrationIp          string               `protobuf:"bytes,9,opt,name=registrationIp,proto3" json:"registrationIp,omitempty"`
	LastLoginIp             string               `protobuf:"bytes,10,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	SocialNetwork           []int32              `protobuf:"varint,11,rep,packed,name=socialNetwork,proto3" json:"socialNetwork,omitempty"`
	RegisteredAt            *timestamp.Timestamp `protobuf:"bytes,16,opt,name=registeredAt,proto3" json:"registeredAt,omitempty"`
	LastVisitAt             *timestamp.Timestamp `protobuf:"bytes,17,opt,name=lastVisitAt,proto3" json:"lastVisitAt,omitempty"`
	ConfirmationEmailStatus bool                 `protobuf:"varint,20,opt,name=confirmationEmailStatus,proto3" json:"confirmationEmailStatus,omitempty"`
	ConfirmationPhoneStatus bool                 `protobuf:"varint,21,opt,name=confirmationPhoneStatus,proto3" json:"confirmationPhoneStatus,omitempty"`
	DefaultLanguage         string               `protobuf:"bytes,23,opt,name=defaultLanguage,proto3" json:"defaultLanguage,omitempty"`
}

func (x *Personal) Reset() {
	*x = Personal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Personal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Personal) ProtoMessage() {}

func (x *Personal) ProtoReflect() protoreflect.Message {
	mi := &file_documents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Personal.ProtoReflect.Descriptor instead.
func (*Personal) Descriptor() ([]byte, []int) {
	return file_documents_proto_rawDescGZIP(), []int{5}
}

func (x *Personal) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Personal) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Personal) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Personal) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Personal) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Personal) GetBirthdate() *timestamp.Timestamp {
	if x != nil {
		return x.Birthdate
	}
	return nil
}

func (x *Personal) GetCountry() int32 {
	if x != nil {
		return x.Country
	}
	return 0
}

func (x *Personal) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Personal) GetRegistrationIp() string {
	if x != nil {
		return x.RegistrationIp
	}
	return ""
}

func (x *Personal) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *Personal) GetSocialNetwork() []int32 {
	if x != nil {
		return x.SocialNetwork
	}
	return nil
}

func (x *Personal) GetRegisteredAt() *timestamp.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *Personal) GetLastVisitAt() *timestamp.Timestamp {
	if x != nil {
		return x.LastVisitAt
	}
	return nil
}

func (x *Personal) GetConfirmationEmailStatus() bool {
	if x != nil {
		return x.ConfirmationEmailStatus
	}
	return false
}

func (x *Personal) GetConfirmationPhoneStatus() bool {
	if x != nil {
		return x.ConfirmationPhoneStatus
	}
	return false
}

func (x *Personal) GetDefaultLanguage() string {
	if x != nil {
		return x.DefaultLanguage
	}
	return ""
}

var File_documents_proto protoreflect.FileDescriptor

var file_documents_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x50, 0x64, 0x61, 0x41, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x09, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x64, 0x61,
	0x41, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x64, 0x61, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x64, 0x61, 0x41, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x64, 0x61, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x64, 0x61, 0x41,
	0x70, 0x69, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xfa, 0x01,
	0x0a, 0x03, 0x42, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x50,
	0x64, 0x61, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x65, 0x74, 0x2e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x70, 0x69, 0x6e, 0x73, 0x22, 0x14, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x45, 0x54, 0x10, 0x00, 0x22, 0x8e, 0x02, 0x0a, 0x09, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x39, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x50, 0x64, 0x61, 0x41, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0x89, 0x01, 0x0a, 0x07,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xfe, 0x04, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3e, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x70, 0x64,
	0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_documents_proto_rawDescOnce sync.Once
	file_documents_proto_rawDescData = file_documents_proto_rawDesc
)

func file_documents_proto_rawDescGZIP() []byte {
	file_documents_proto_rawDescOnce.Do(func() {
		file_documents_proto_rawDescData = protoimpl.X.CompressGZIP(file_documents_proto_rawDescData)
	})
	return file_documents_proto_rawDescData
}

var file_documents_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_documents_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_documents_proto_goTypes = []interface{}{
	(Bet_OPERATION)(0),          // 0: PdaApi.Bet.OPERATION
	(Financial_OPERATION)(0),    // 1: PdaApi.Financial.OPERATION
	(*Documents)(nil),           // 2: PdaApi.Documents
	(*Document)(nil),            // 3: PdaApi.Document
	(*Bet)(nil),                 // 4: PdaApi.Bet
	(*Financial)(nil),           // 5: PdaApi.Financial
	(*Balance)(nil),             // 6: PdaApi.Balance
	(*Personal)(nil),            // 7: PdaApi.Personal
	(*timestamp.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_documents_proto_depIdxs = []int32{
	3,  // 0: PdaApi.Documents.documents:type_name -> PdaApi.Document
	7,  // 1: PdaApi.Document.personal:type_name -> PdaApi.Personal
	5,  // 2: PdaApi.Document.financial:type_name -> PdaApi.Financial
	4,  // 3: PdaApi.Document.bet:type_name -> PdaApi.Bet
	6,  // 4: PdaApi.Document.balance:type_name -> PdaApi.Balance
	0,  // 5: PdaApi.Bet.operation:type_name -> PdaApi.Bet.OPERATION
	8,  // 6: PdaApi.Bet.date:type_name -> google.protobuf.Timestamp
	1,  // 7: PdaApi.Financial.operation:type_name -> PdaApi.Financial.OPERATION
	8,  // 8: PdaApi.Financial.date:type_name -> google.protobuf.Timestamp
	8,  // 9: PdaApi.Personal.birthdate:type_name -> google.protobuf.Timestamp
	8,  // 10: PdaApi.Personal.registeredAt:type_name -> google.protobuf.Timestamp
	8,  // 11: PdaApi.Personal.lastVisitAt:type_name -> google.protobuf.Timestamp
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_documents_proto_init() }
func file_documents_proto_init() {
	if File_documents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_documents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Documents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Financial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Personal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_documents_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Document_Personal)(nil),
		(*Document_Financial)(nil),
		(*Document_Bet)(nil),
		(*Document_Balance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_documents_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_documents_proto_goTypes,
		DependencyIndexes: file_documents_proto_depIdxs,
		EnumInfos:         file_documents_proto_enumTypes,
		MessageInfos:      file_documents_proto_msgTypes,
	}.Build()
	File_documents_proto = out.File
	file_documents_proto_rawDesc = nil
	file_documents_proto_goTypes = nil
	file_documents_proto_depIdxs = nil
}
